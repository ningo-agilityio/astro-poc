---
import authorData from 'src/data/authors.json';
import PostPreview from 'layout:PostPreview';
import BaseLayout from 'layout:BaseLayout';
import Pagination from 'layout:Pagination';

export async function getStaticPaths({ paginate }) {
	const allPosts = Astro.fetchContent<MarkdownFrontmatter>('../../data/post/*.md');
	const sortedPosts = allPosts.sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf());

	// Return a paginated collection of paths for all posts
	return paginate(sortedPosts, { pageSize: 2 });
}

// page
let title = 'Astro Blog';
let description = 'Blog on Astro';
let canonicalURL = Astro.request.canonicalURL.pathname;

// collection
interface MarkdownFrontmatter {
	date: number;
	description: string;
	title: string;
}

const { page } = Astro.props;
---
<BaseLayout title={title} description={description}>
  <h2 class="text-fuchsia-700 font-bold text-xl">All Posts</h2>
  <Pagination 
    prevUrl={page.url.prev} 
    nextUrl={page.url.next} 
    current={canonicalURL}
    total={parseInt(page.total)}
    start={page.start}
    end={page.end}
  />
  {page.data.map((post) => <PostPreview post={post} author={authorData[post.author]} />)}
</BaseLayout>
